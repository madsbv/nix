From 1215b9775d0145faf413c5a8253b95f74f2cb756 Mon Sep 17 00:00:00 2001
From: Reno Dakota <paparodeo@proton.me>
Date: Tue, 31 Dec 2024 03:17:50 -0800
Subject: [PATCH] libossp_uuid: remove invalid ac_cv_va_copy value

Use va_copy detection when not cross compiling and when cross compiling
use `C99` which is a value for ac_cv_va_copy.

Change 5c7cfbc0f11e360f50467b20a407c675c976d3a0 set ac_cv_va_copy=yes
which results in
```
```
and there is no definition for __VA_COPY_USE_yes, it needs to be
__VA_COPY_USE_{ASP,...,C99,...,GCM}.

While __VA_COPY_USE_yes is wrong it didn't cause issues because
stdarg.h is included later and just redefines va_copy.

However, the headers with clang-19 do not redefine va_copy and the
compile fails.
---
 pkgs/by-name/li/libossp_uuid/package.nix | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/pkgs/by-name/li/libossp_uuid/package.nix b/pkgs/by-name/li/libossp_uuid/package.nix
index a04339778f058..2fe0c11c9f523 100644
--- a/pkgs/by-name/li/libossp_uuid/package.nix
+++ b/pkgs/by-name/li/libossp_uuid/package.nix
@@ -13,9 +13,9 @@ stdenv.mkDerivation rec {
     sha256 = "11a615225baa5f8bb686824423f50e4427acd3f70d394765bdff32801f0fd5b0";
   };
 
-  configureFlags = [
-    "ac_cv_va_copy=yes"
-  ] ++ lib.optional stdenv.hostPlatform.isFreeBSD "--with-pic";
+  configureFlags =
+    lib.optional (stdenv.buildPlatform != stdenv.hostPlatform) "ac_cv_va_copy=C99"
+    ++ lib.optional stdenv.hostPlatform.isFreeBSD "--with-pic";
 
   patches = [ ./shtool.patch ];
 
